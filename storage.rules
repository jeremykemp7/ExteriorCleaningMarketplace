rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Public access for design assets
    match /design/assets/{asset=**} {
      allow read;  // Allow public read access without authentication
    }

    // Design assets - must come before the general rule
    match /design/assets/{asset=**} {
      allow read: if true;  // Allow public read access to design assets
      allow write: if request.auth != null && request.auth.token.admin == true;
    }

    // Profile images
    match /users/{userId}/profile/{imageId} {
      allow read: if true;  // Allow public read for development
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && request.resource.size <= 5 * 1024 * 1024  // 5MB limit
        && request.resource.contentType.matches('image/.*');  // Must be an image
    }

    // Property images (for building owners)
    match /properties/{propertyId}/images/{imageId} {
      allow read: if true;
      allow write: if request.auth != null
        && request.resource.size <= 5 * 1024 * 1024
        && request.resource.contentType.matches('image/.*');
    }

    // Service completion images (for cleaners)
    match /services/{serviceId}/images/{imageId} {
      allow read: if true;
      allow write: if request.auth != null
        && request.resource.size <= 5 * 1024 * 1024
        && request.resource.contentType.matches('image/.*');
    }

    match /users/{userId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }
    
    match /jobs/{jobId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null 
        && (resource == null || resource.metadata.ownerId == request.auth.uid);
    }

    // Default rule - must come last
    match /{allPaths=**} {
      allow read: if true;
      allow write: if false;  // Restrict write access by default
    }
  }
} 